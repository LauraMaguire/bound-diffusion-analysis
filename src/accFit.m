function [fitresult, gof] = accFit(t, y, tauD)
%accFit(T,Y)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : t
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Oct-2018 11:11:24


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( t, y );

BesZerosSqr = besselzero(0,100,1).^2;

% Set up fittype and options.
%ft = fittype( ['A*(1-0.691*exp(-1.14*D*(t)/' num2str(tauD) ')-0.131*exp(-5.98*D*(t)/' num2str(tauD) ')-0.0534*exp(-14.7*D*(t)/' num2str(tauD) ')-0.0288*exp(-27.3*D*(t)/' num2str(tauD) ')-0.0179*exp(-43.77*D*(t)/' num2str(tauD) '))'], 'independent', 't', 'dependent', 'y' );
fstring = 'A*(1';
for i=1:100
    fstring = [fstring '-(4/' num2str(BesZerosSqr(i)) ...
        ')*exp(-' num2str(BesZerosSqr(i)) '*(pi/16)*D*(t)/' num2str(tauD) ')'];
end
fstring = [fstring ')'];
disp(fstring);
ft = fittype( fstring, 'independent', 't', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0]; % A D
opts.StartPoint = [1 100]; % A D

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'y vs. t', 'untitled fit 1', 'Location', 'NorthEast' );
% Label axes
xlabel t
ylabel y
grid on


