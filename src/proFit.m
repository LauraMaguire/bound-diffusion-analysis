function [fitresult, gof] = proFit(x, y, t, tauD, Nterms,limit)
%accFit(T,Y)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : t
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Oct-2018 11:11:24


%% Fit: 'untitled fit 1'.

BesZeros = besselzero(0,Nterms,1);
radius = sqrt(16*tauD/pi);
alpha = BesZeros./radius;
denom = BesZeros.*besselj(1,BesZeros);
TimeConst = BesZeros.^2/radius^2;

I = limit;
x = 1.58*(1:floor(radius/1.58));
yy = nan(1,floor(radius/1.58));
yy(1:length(y)) = y;
y = fliplr(yy);%./pro{1,n}(1,lim();

[xData, yData] = prepareCurveData( x, y );



% Set up fittype and options.
fstring = 'c0*(2';
for i=1:Nterms
    fstring = [fstring '-(besselj(0,' num2str(alpha(i)) '*x)/'...
        num2str(denom(i)) ')*exp(-D*' num2str(t) '*' num2str(TimeConst(i)) ')'];
%     fstring = [fstring '-(besselj(0,' num2str(BesZeros(i)) '*x/r)/'...
%         num2str(denom(i)) ')*exp(-D*' num2str(t) '*' num2str(BesZeros(i).^2) '/r^2)'];
end
fstring = [fstring ')'];
disp(fstring);
ft = fittype( fstring, 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0]; % D c0
opts.StartPoint = [100 1]; % D c0

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'y vs. t', 'untitled fit 1', 'Location', 'NorthEast' );
% Label axes
xlabel t
ylabel y
grid on


